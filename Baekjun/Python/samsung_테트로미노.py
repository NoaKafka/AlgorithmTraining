

bitmask = [
# 1번은 2종류
[(0,0),(0,1),(0,2),(0,3),(0,3)],
[(0,0),(1,0),(2,0),(3,0),(3,0)],
# 2번은 1종류
[(0,0),(0,1),(1,0),(1,1),(1,1)],
# 3번은 8종류
[(0,0),(1,0),(2,0),(2,1),(2,1)],
[(0,0),(0,1),(0,2),(1,0),(1,2)],
[(0,0),(0,1),(1,1),(2,1),(2,1)],
[(0,2),(1,0),(1,1),(1,2),(1,2)],
[(0,1),(1,1),(2,0),(2,1),(2,1)],
[(0,0),(1,0),(1,1),(1,2),(1,2)],
[(0,0),(0,1),(1,0),(2,0),(2,1)],
[(0,0),(0,1),(0,2),(1,2),(1,2)],
# 4번은 4종류
[(0,0),(1,0),(1,1),(2,1),(2,1)],
[(0,1),(0,2),(1,0),(1,1),(1,2)],
[(0,1),(1,0),(1,1),(2,0),(2,1)],
[(0,0),(0,1),(1,1),(1,2),(1,2)],
# 5번은 4종류
[(0,0),(0,1),(0,2),(1,1),(1,2)],
[(0,1),(1,0),(1,1),(2,1),(2,1)],
[(0,1),(1,0),(1,1),(1,2),(1,2)],
[(0,0),(1,0),(1,1),(2,0),(2,1)]
]

N, M = map(int, input().split())
board = []
for i in range(N):
    board.append(list(map(int,input().split())))

maxi = 0
for x in range(N):
    for y in range(M):
        for mask in bitmask:
            if x + mask[-1][0] >= N or y + mask[-1][1] >= M:
                continue
            temp = 0
            temp += board[x + mask[0][0]][y + mask[0][1]]
            temp += board[x + mask[1][0]][y + mask[1][1]]
            temp += board[x + mask[2][0]][y + mask[2][1]]
            temp += board[x + mask[3][0]][y + mask[3][1]]
            if temp > maxi:
                maxi = temp
print(maxi)
    
